/*
msgsvc

msgsvc api

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package msgsvcclientgo

import (
	"encoding/json"
)

// checks if the CreateMessage201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateMessage201Response{}

// CreateMessage201Response struct for CreateMessage201Response
type CreateMessage201Response struct {
	// The message ID
	MessageId *string `json:"messageId,omitempty"`
}

// NewCreateMessage201Response instantiates a new CreateMessage201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMessage201Response() *CreateMessage201Response {
	this := CreateMessage201Response{}
	return &this
}

// NewCreateMessage201ResponseWithDefaults instantiates a new CreateMessage201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMessage201ResponseWithDefaults() *CreateMessage201Response {
	this := CreateMessage201Response{}
	return &this
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *CreateMessage201Response) GetMessageId() string {
	if o == nil || IsNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMessage201Response) GetMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *CreateMessage201Response) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *CreateMessage201Response) SetMessageId(v string) {
	o.MessageId = &v
}

func (o CreateMessage201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateMessage201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageId) {
		toSerialize["messageId"] = o.MessageId
	}
	return toSerialize, nil
}

type NullableCreateMessage201Response struct {
	value *CreateMessage201Response
	isSet bool
}

func (v NullableCreateMessage201Response) Get() *CreateMessage201Response {
	return v.value
}

func (v *NullableCreateMessage201Response) Set(val *CreateMessage201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMessage201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMessage201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMessage201Response(val *CreateMessage201Response) *NullableCreateMessage201Response {
	return &NullableCreateMessage201Response{value: val, isSet: true}
}

func (v NullableCreateMessage201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMessage201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


